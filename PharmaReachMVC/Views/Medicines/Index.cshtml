@using PharmaReachMVC.ViewModels
@* @model IEnumerable<MedicineViewModel> *@
@* @model IEnumerable<PharmaReachMVC.Models.Medicine> *@
@model Tuple<List<MedicineViewModel>, MedicineSearchViewModel>

@{
    ViewData["Title"] = "Medicines";
    var searchQuery = ViewData["SearchQuery"] as string ?? "";
    var currentPage = ViewData["CurrentPage"] != null ? Convert.ToInt32(ViewData["CurrentPage"]) : 1;
    var totalPages = ViewData["TotalPages"] != null ? Convert.ToInt32(ViewData["TotalPages"]) : 1;
    var medicines = Model.Item1;
    var searchViewModel = Model.Item2;
}

<!-- Render the shared search and filter component -->
@Html.Partial("_SearchAndFilter", searchViewModel)

    <div class="row">
    @if (!medicines.Any())
        {
        <div class="col-12 text-center my-5">
            <p class="fs-4">No medicines found.</p>
        </div>
        }
    @foreach (var medicineViewModel in medicines)
        {
            @Html.Partial("_MedicineCard", medicineViewModel) <!-- Rendering the partial view -->
        }
    </div>
    <!-- Pagination -->
    <nav aria-label="Page navigation example" class="d-flex align-items-center justify-content-center">
        <ul class="pagination">
            @if (ViewData["CurrentPage"] != null && (int)ViewData["CurrentPage"] > 1)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index", new { searchQuery = ViewData["SearchQuery"],
                                                                        canBeFreeFilter = ViewData["CanBeFreeFilter"],
                                                                        isFreeFilter = ViewData["IsFreeFilter"],
                                                                        page = (int)ViewData["CurrentPage"] - 1 })">Previous</a>
                </li>
            }

            @for (int i = 1; i <= (int)ViewData["TotalPages"]; i++)
            {
                <li class="page-item @(i == (int)ViewData["CurrentPage"] ? "active" : "")">
                    <a class="page-link" href="@Url.Action("Index", new { searchQuery = ViewData["SearchQuery"],
                                                                        canBeFreeFilter = ViewData["CanBeFreeFilter"],
                                                                        isFreeFilter = ViewData["IsFreeFilter"],
                                                                        page = i })">@i</a>
                </li>
            }

            @if (ViewData["CurrentPage"] != null && (int)ViewData["CurrentPage"] < (int)ViewData["TotalPages"])
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index", new { searchQuery = ViewData["SearchQuery"],
                                                                        canBeFreeFilter = ViewData["CanBeFreeFilter"],
                                                                        isFreeFilter = ViewData["IsFreeFilter"],
                                                                        page = (int)ViewData["CurrentPage"] + 1 })">Next</a>
                </li>
            }
        </ul>
    </nav>
    <!-- Pagination -->



<!-- Shared Medicine Modal -->
@Html.Partial("_MedicineModal")



@section Scripts {
    <script src="~/js/medicineModal.js"></script>
}